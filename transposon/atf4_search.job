#!/bin/bash --login
#$ -cwd
#$ -t 1-218
#$ -N zatf4
module load apps/binapps/anaconda3/2020.07
module load tools/env/proxy2 


FOLDER=`awk "NR==$SGE_TASK_ID" folder_paths.txt`

# Enter the isolate folder
cd $FOLDER
# Extract prefix
PREFIX=$(echo $FOLDER | rev | cut -d"/" -f1 | rev)
GENOME=./megahit*/$PREFIX.contigs.fa


# 1) PERFORM ALIGNMENTS
conda activate blast_env
makeblastdb -in $GENOME -dbtype nucl -out genome_db
# Search the ORF gainst genome
blastn -db genome_db -query /mnt/iusers01/pb01/f99731hc/scratch/imperial/orf.fasta -out orf_vs_genome -outfmt 6
# Search TIR against genome
blastn -db genome_db -query /mnt/iusers01/pb01/f99731hc/scratch/imperial/tir.fasta -out tir_vs_genome -outfmt 6



# 2) IDENTIFY ITR-ORF-ITR's
conda activate bedtools_env
# Generate BED files from BLAST output
rm *.bed flanked_orfs.summary
grep -v '^#' orf_vs_genome| perl -ane 'if($F[8]<=$F[9]){print join("\t",$F[1],$F[8]-1,$F[9],$F[0],"0","+"),"\n";}else{print join("\t",$F[1],$F[9]-1,$F[8],$F[0],"0","-"),"\n";}' | sort >> orf_vs_genome.bed
grep -v '^#' tir_vs_genome| perl -ane 'if($F[8]<=$F[9]){print join("\t",$F[1],$F[8]-1,$F[9],$F[0],"0","+"),"\n";}else{print join("\t",$F[1],$F[9]-1,$F[8],$F[0],"0","-"),"\n";}' | sort >> tir_vs_genome.bed

# Update ORF name for downstream identification
while read bedline
do
	newname=$(echo "$bedline" | cut -d$'\t' -f1-4 | sed 's/\t/-/g')
	echo "$bedline" | sed "s/atf4_orf/$newname/g" >> updated_orf_vs_genome.bed
done <orf_vs_genome.bed

# Separate TIRs into start and end files
grep "TIR_start" tir_vs_genome.bed > start_tir.bed
grep "TIR_end" tir_vs_genome.bed > end_tir.bed


 
# Identify neighbouring regions
bedtools closest -a updated_orf_vs_genome.bed -b start_tir.bed end_tir.bed -io -s -k 2 -mdb all > orf_near_itr.txt
# Identify if they are flanking and save
while read orfline
do
	orf=$(echo "$orfline" | cut -d$'\t' -f4)
	if [ $(grep $orf orf_near_itr.txt | wc -l) -eq 2 ] 
	then
		echo "$orfline" >> flanked_orfs.bed
	fi
done <updated_orf_vs_genome.bed

# 3) EXTRACT FLANKED ORFs SEQUENCE
bedtools getfasta -fi $GENOME -fo flanked_orfs.fasta -bed flanked_orfs.bed
sed -i "s/>/>$PREFIX:/g" flanked_orfs.fasta

count=$(grep -c ">" flanked_orfs.fasta)
echo $PREFIX,$count >> flanked_orfs.summary

count_tir=$(grep -c "+" tir_vs_genome.bed)
echo $PREFIX,$count_tir >> tir.summary
